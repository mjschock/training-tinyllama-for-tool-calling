[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[project]
dynamic = ["dependencies", "version"]
name = "training_tinyllama_for_tool_calling"
readme = "README.md"

[project.entry-points."kedro.hooks"]

[project.optional-dependencies]
dev = [
  "pytest-cov~=3.0",
  "pytest-mock>=1.7.1, <2.0",
  "pytest~=7.2",
  "ruff~=0.1.8"
]
docs = [
  "Jinja2<3.2.0",
  "docutils<0.21",
  "ipykernel>=5.3, <7.0",
  "myst-parser>=1.0,<2.1",
  "nbsphinx==0.8.1",
  "sphinx-autodoc-typehints==1.20.2",
  "sphinx>=5.3,<7.3",
  "sphinx_copybutton==0.5.2",
  "sphinx_rtd_theme==2.0.0"
]

[project.scripts]
training-tinyllama-for-tool-calling = "training_tinyllama_for_tool_calling.__main__:main"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]
fail_under = 0
show_missing = true

[tool.kedro]
example_pipeline = "False"
kedro_init_version = "0.19.9"
package_name = "training_tinyllama_for_tool_calling"
project_name = "Training TinyLlama for Tool-calling"
source_dir = "src"
tools = ['None']

[tool.kedro_telemetry]
project_id = "d4b732cd5a7846138fcdbfe6eeb48899"

[tool.poetry]
authors = ["Michael James Schock <m@mjschock.com>"]
description = ""
name = "training-tinyllama-for-tool-calling"
packages = [{from = "src", include = "training_tinyllama_for_tool_calling"}]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
accelerate = "^1.1.0"
bert-score = "^0.3.13"
bitsandbytes = ">=0.41.3"
datasets = "^3.1.0"
evaluate = "^0.4.3"
fastapi = "^0.115.4"
kedro = {extras = ["jupyter"], version = "^0.19.9"}
kedro-datasets = {extras = ["huggingface-hfdataset", "pandas-csvdataset", "pandas-exceldataset", "pandas-jsondataset", "pandas-parquetdataset"], version = "^5.1.0"}
kedro-mlflow = "^0.13.3"
mlflow = ">=2.11.0"
nltk = "^3.9.1"
numpy = "<2"
openai = "^1.53.0"
papermill = "^2.6.0"
peft = "^0.13.2"
prefect = "^3.1.2"
prefect-docker = "^0.6.2"
psutil = "^6.1.0"
pynvml = "^11.5.3"
python = "^3.10"
rouge-score = "^0.1.2"
scikit-learn = "^1.5.2"
scipy = "^1.14.1"
textstat = "^0.7.4"
tiktoken = "^0.8.0"
torch = "^2.5.1"
torchvision = "^0.20.1"
transformers = "^4.46.2"
trl = "^0.12.0"
unsloth = "^2024.11.5"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^24.10.0"}
ipython = ">=8.10"
ipywidgets = "^8.1.5"
isort = "^5.13.2"
jupyter = "^1.1.1"
jupyterlab = ">=3.0"
notebook = "^7.2.2"
toml-sort = "^0.23.1"

[tool.pytest.ini_options]
addopts = """
--cov-report term-missing \
--cov src/training_tinyllama_for_tool_calling -ra"""

[tool.ruff]
ignore = ["E501"] # Ruff format takes care of line-too-long
line-length = 88
select = [
  "E", # pycodestyle
  "F", # Pyflakes
  "I", # isort
  "PL", # Pylint
  "T201", # Print Statement
  "UP", # pyupgrade
  "W" # pycodestyle
]
show-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}
version = {attr = "training_tinyllama_for_tool_calling.__version__"}

[tool.setuptools.packages.find]
namespaces = false
where = ["src"]
